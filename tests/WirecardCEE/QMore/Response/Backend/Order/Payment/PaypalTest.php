<?php

/**
 * Test class for WirecardCEE_QMore_Response_Backend_Order_Payment_PaypalTest.
 * Generated by PHPUnit on 2011-06-24 at 13:26:16.
 */
class WirecardCEE_QMore_Response_Backend_Order_Payment_PaypalTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var WirecardCEE_QMore_Response_Backend_GetOrderDetails
     */
    protected $object;
    protected $_secret = 'B8AKTPWBRMNBV455FG6M2DANE99WU2';
    protected $_customerId = 'D200001';
    protected $_shopId = 'qmore';
    protected $_language = 'en';
    protected $_toolkitPassword = 'jcv45z';
    protected $_orderNumber = 3485464;


    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
        $customerId = $this->_customerId;
        $shopId     = $this->_shopId;
        $secret     = $this->_secret;
        $language   = $this->_language;

        $oBackClient = new WirecardCEE_QMore_BackendClient(Array(
            'CUSTOMER_ID' => $customerId,
            'SHOP_ID'     => $shopId,
            'SECRET'      => $secret,
            'LANGUAGE'    => $language,
            'PASSWORD'    => $this->_toolkitPassword
        ));

        $this->object = $oBackClient->getOrderDetails($this->_orderNumber)->getOrder()->getPayments()->current();
    }

    public function testGetPayerId()
    {
        $this->assertEquals('PAYER123456ID', $this->object->getPayerId());
    }

    public function testGetPayerEmail()
    {
        $this->assertEquals('buyer@paypal.com', $this->object->getPayerEmail());
    }

    public function testGetPayerFirstName()
    {
        $this->assertEquals('Test', $this->object->getPayerFirstName());
    }

    public function testGetPayerLastName()
    {
        $this->assertEquals('Consumer', $this->object->getPayerLastName());
    }

    public function testGetPayerAddressCountry()
    {
        $this->assertEquals('AT', $this->object->getPayerAddressCountry());
    }

    public function testGetPayerAddressCity()
    {
        $this->assertEquals('Musterstadt', $this->object->getPayerAddressCity());
    }

    public function testGetPayerAddressState()
    {
        $this->assertEquals('Musterland', $this->object->getPayerAddressState());
    }

    public function testGetPayerAddressName()
    {
        $this->assertEquals('', $this->object->getPayerAddressName());
    }

    public function testGetPayerAddressStreet1()
    {
        $this->assertEquals('', $this->object->getPayerAddressStreet1());
    }

    public function testGetPayerAddressStreet2()
    {
        $this->assertEquals('', $this->object->getPayerAddressStreet2());
    }

    public function testGetPayerAddressZip()
    {
        $this->assertEquals('1234', $this->object->getPayerAddressZip());
    }

    public function testGetPayerAddressStatus()
    {
        $this->assertEquals('unverified', $this->object->getPayerAddressStatus());
    }

    public function testGetProtectionEligibility()
    {
        $this->assertEquals('ExtendedCustomerProtection', $this->object->getProtectionEligibility());
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->object = null;
        unset( $this );
    }
}
