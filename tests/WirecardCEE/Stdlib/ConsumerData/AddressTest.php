<?php

/**
 * Test class for WirecardCEE_Client_QPay_Request_Initiation_ConsumerData_Address.
 * Generated by PHPUnit on 2011-06-24 at 13:17:12.
 */
class WirecardCEE_Stdlib_ConsumerData_AddressTest extends PHPUnit_Framework_TestCase {

    /**
     * @var WirecardCEE_Stdlib_ConsumerData_Address
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new WirecardCEE_Stdlib_ConsumerData_Address(WirecardCEE_Stdlib_ConsumerData_Address::TYPE_SHIPPING);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    public function testSetFirstname() {
        $firstname = 'Unit';
        $this->object->setFirstname($firstname);
        $data = $this->object->getData();
        $this->assertArrayHasKey('consumerShippingFirstname', $data);
        $this->assertEquals($firstname, $data['consumerShippingFirstname']);
    }

    public function testSetLastname() {
        $lastname = 'Test';
        $this->object->setLastname($lastname);
        $data = $this->object->getData();
        $this->assertArrayHasKey('consumerShippingLastname', $data);
        $this->assertEquals($lastname, $data['consumerShippingLastname']);
    }

    public function testSetAddress1() {
        $address1 = 'Teststreet 1';
        $this->object->setAddress1($address1);
        $data = $this->object->getData();
        $this->assertArrayHasKey('consumerShippingAddress1', $data);
        $this->assertEquals($address1, $data['consumerShippingAddress1']);
    }

    public function testSetAddress2() {
        $address2 = 'Teststreet 2';
        $this->object->setAddress2($address2);
        $data = $this->object->getData();
        $this->assertArrayHasKey('consumerShippingAddress2', $data);
        $this->assertEquals($address2, $data['consumerShippingAddress2']);
    }

    public function testSetCity() {
        $city = 'TestCity';
        $this->object->setCity($city);
        $data = $this->object->getData();
        $this->assertArrayHasKey('consumerShippingCity', $data);
        $this->assertEquals($city, $data['consumerShippingCity']);
    }

    public function testSetCountry() {
        $country = 'TestCountry';
        $this->object->setCountry($country);
        $data = $this->object->getData();
        $this->assertArrayHasKey('consumerShippingCountry', $data);
        $this->assertEquals($country, $data['consumerShippingCountry']);
    }

    public function testSetState() {
        $state = 'State';
        $this->object->setState($state);
        $data = $this->object->getData();
        $this->assertArrayHasKey('consumerShippingState', $data);
        $this->assertEquals($state, $data['consumerShippingState']);
    }

    public function testSetZipCode() {
        $zipCode = '1234';
        $this->object->setZipCode($zipCode);
        $data = $this->object->getData();
        $this->assertArrayHasKey('consumerShippingZipCode', $data);
        $this->assertEquals($zipCode, $data['consumerShippingZipCode']);
    }

    public function testSetPhone() {
        $phone = '0123456789';
        $this->object->setPhone($phone);
        $data = $this->object->getData();
        $this->assertArrayHasKey('consumerShippingPhone', $data);
        $this->assertEquals($phone, $data['consumerShippingPhone']);
    }

    public function testSetFax() {
        $fax = '0123456789';
        $this->object->setFax($fax);
        $data = $this->object->getData();
        $this->assertArrayHasKey('consumerShippingFax', $data);
        $this->assertEquals($fax, $data['consumerShippingFax']);
    }

    public function testGetData() {
        $data = $this->object->getData();
        $this->assertInternalType('array', $data);
    }

}

?>
