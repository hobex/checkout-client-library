<?php

/**
 * Test class for WirecardCEE_Client_QPay_Return_Cancel.
 * Generated by PHPUnit on 2011-06-24 at 13:25:58.
 */
class WirecardCEE_QPay_Return_PendingTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var WirecardCEE_QPay_Return_Pending
     */
    protected $object;

    protected $_returnData = Array(
        'amount'                   => '1',
        'currency'                 => 'EUR',
        'paymentType'              => 'QUICK',
        'financialInstitution'     => 'QUICK',
        'language'                 => 'de',
        'orderNumber'              => '16280512',
        'paymentState'             => 'PENDING',
        'gatewayReferenceNumber'   => 'DGW_16280512_RN',
        'gatewayContractNumber'    => 'DemoContractNumber123',
        'avsResponseCode'          => 'X',
        'avsResponseMessage'       => 'Demo AVS ResultMessage',
        'responseFingerprintOrder' => 'amount,currency,paymentType,financialInstitution,language,orderNumber,paymentState,gatewayReferenceNumber,gatewayContractNumber,avsResponseCode,avsResponseMessage,secret,responseFingerprintOrder',
        'responseFingerprint'      => '3671cd41c4f11430713fb1b1de397ef8536364a458a76f92ae7e7554f6a61d4a5e077b0f8e34704592e95305a1eee162fbaaa2dd31f37df15d3d82d23a0fa0a5'
    );

    protected $_secret = 'B8AKTPWBRMNBV455FG6M2DANE99WU2';

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new WirecardCEE_QPay_Return_Pending($this->_returnData, $this->_secret);
    }

    public function testPaymentState()
    {
        $this->assertEquals('PENDING', $this->object->getPaymentState());
    }

    public function testValidate()
    {
        $this->assertTrue($this->object->validate());
    }

    public function testGetReturned()
    {
        if (array_key_exists('responseFingerprintOrder', $this->_returnData) && array_key_exists('responseFingerprint',
                $this->_returnData)
        ) {
            unset( $this->_returnData['responseFingerprintOrder'] );
            unset( $this->_returnData['responseFingerprint'] );
        }

        $this->assertEquals($this->_returnData, $this->object->getReturned());
    }
}
